#include <stdio.h>
#include <limits.h>

#define N 4 // Number of cities

int cost[N][N] = {
    {0, 10, 15, 20},
    {10, 0, 35, 25},
    {15, 35, 0, 30},
    {20, 25, 30, 0}
};

int dp[1 << N][N];

int tsp(int mask, int pos) {
    if (mask == (1 << N) - 1)
        return cost[pos][0]; // Return to the starting city

    if (dp[mask][pos] != -1)
        return dp[mask][pos];

    int ans = INT_MAX;
    for (int next = 0; next < N; ++next) {
        if (!(mask & (1 << next))) {
            int newCost = cost[pos][next] + tsp(mask | (1 << next), next);
            ans = (ans < newCost) ? ans : newCost;
        }
    }
    return dp[mask][pos] = ans;
}

int main() {
    for (int i = 0; i < (1 << N); ++i)
        for (int j = 0; j < N; ++j)
            dp[i][j] = -1;

    printf("Minimum cost for TSP: %d\n", tsp(1, 0)); // Start from city 0

    return 0;
}
